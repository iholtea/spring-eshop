/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.47).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.ionuth.api;

import io.ionuth.api.model.Customer;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import java.util.List;
import java.util.Map;


@Validated
@Api(value = "Customer", description = "the Customer API")
public interface CustomerApi {

    @ApiOperation(value = "returns all customers", nickname = "getAllCustomers", notes = "returns all customers or empty collection if not found", response = Customer.class, responseContainer = "List", tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "for successfull fetch", response = Customer.class, responseContainer = "List") })
    @RequestMapping(value = "/api/v1/customers",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Customer>> getAllCustomers();


    @ApiOperation(value = "returns a customer", nickname = "getCustomerById", notes = "returns a customer identifiable by a given ID", response = Customer.class, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "For successful fetch", response = Customer.class) })
    @RequestMapping(value = "/api/v1/customers/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Customer> getCustomerById(@ApiParam(value = "customer identifier", required=true) @PathVariable("id") Long id);

}

